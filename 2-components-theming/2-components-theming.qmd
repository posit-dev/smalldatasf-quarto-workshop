---
title: "Dashboard components and themes"
subtitle: "Small Data SF"
author:   
  - name: Sara Altman
    affiliations:
      - name: Posit, PBC
  - name: Isabella Vel√°squez
    affiliations:
      - name: Posit, PBC
date: "2024-09-23"
footer: "[pos.it/small-data-sf-quarto-workshop](https://pos.it/small-data-sf-quarto-workshop)"
logo: "../images/slides-logo.png"
format:
  revealjs:
    theme: ../style/slides.scss
    transition: fade
    slide-number: true
    chalkboard: true
---

# Dashboard components

## Navigation bar and pages

Icon, title, and author along with links to sub-pages if more than one page is defined.

![](images/navbar-pages.png)

## Sidebars, rows, columns, and tabsets

Rows and columns using markdown heading, with optional attributes to control height, width, etc.
Sidebars, mostly used for for interactive inputs.
Tabsets to further divide content.

![](images/sidebar-rows-columns-tabsets.png)

## Cards

Cards are containers for code cell outputs (e.g., plots, tables, value boxes) and free form markdown text.
The content of cards typically maps to *cells* in your notebook or source document.

![](images/cards.png)

## A note on computing language

-   The examples in this module will primarily feature Python code in code cells

-   All code in code cells can be replaced with R, Julia, Observable, etc. and the layout would look exactly the same

-   When/if different behavior in layout is expected, this will be explicitly called out and examples in other computing languages will also be provided

# Navigation bar and pages

## Pages {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|11,21"}
{{< include _pages.qmd >}}
````
:::

## Pages {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="11"}
{{< include _pages.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/pages-scatter.png)
:::
:::

## Pages {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="21"}
{{< include _pages.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/pages-bar.png)
:::
:::

## Logo {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|3-5"}
{{< include _logo.qmd >}}
````
:::

## Logo {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="3-5"}
{{< include _logo.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/logo.png)
:::
:::

## Navigation buttons {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|6-15"}
{{< include _nav-buttons.qmd >}}
````
:::

## Navigation buttons {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="6-15"}
{{< include _nav-buttons.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/nav-buttons.png)
:::
:::

## Navigation buttons -- alternative {.smaller auto-animate="true"}

Special aliases are recognized for certain navigation buttons: `linkedin`, `facebook`, `reddit`, `twitter`, and `github`.

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|6-7"}
{{< include _nav-buttons-alternative.qmd >}}
````
:::

# Sidebars, rows, columns, and tabsets

## Sidebars

-   For information about the dashboard, data, etc. and/or for user inputs in interactive dashboards

-   Can be at the global or page level

## Sidebars {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|23-25"}
{{< include _sidebar-global.qmd >}}
````
:::

## Sidebars {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="23-25"}
{{< include _sidebar-global.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/sidebars-global-scatter.png)
:::
:::

## Sidebars {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="23-25"}
{{< include _sidebar-global.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/sidebars-global-bar.png)
:::
:::

## Rows {auto-animate="true"}

By default, cards are laid out in rows:

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|13,23"}
{{< include _rows.qmd >}}
````
:::

## Rows {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="13,23"}
{{< include _rows.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/rows.png)
:::
:::

## Rows {auto-animate="true"}

Default value of `orientation` is `rows`:

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="4-5"}
{{< include _rows-orientation.qmd >}}
````
:::

## Columns {auto-animate="true"}

Setting `orientation` to `columns` makes each `##` indicate a column instead of a row:

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="4-5"}
{{< include _columns.qmd >}}
````
:::

## Columns {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="4-5,14,24"}
{{< include _columns.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/columns.png)
:::
:::

## Rows, then columns {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|13-23|25-45"}
{{< include _rows-then-columns.qmd >}}
````
:::

## Rows, then columns {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="13,15,19,25,27,37"}
{{< include _rows-then-columns.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/rows-then-columns.png)
:::
:::

## Columns, then rows {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|5|13-23|26-46"}
{{< include _columns-then-rows.qmd >}}
````
:::

## Columns, then rows {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="5"}
{{< include _columns-then-rows.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/columns-then-rows.png)
:::
:::

## Heights and widths of rows and columns {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|13,25|15,19|27,37"}
{{< include _rows-then-columns-height-width.qmd >}}
````
:::

## Heights and widths of rows and columns {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="13,25,15,19,27,37"}
{{< include _rows-then-columns-height-width.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/rows-then-columns-heights-widths.png)
:::
:::

## Tabsets {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|13|25"}
{{< include _tabsets.qmd >}}
````
:::

## Tabsets {.smaller auto-animate="true"}

Each card within a row/column or each row/column within another becomes a tab:

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="13,25"}
{{< include _tabsets.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/tabsets.png)
:::
:::

# Cards

## Cards

::: incremental
-   Fundamental unit of display within dashboards

-   Created automatically for cells and markdown content that are within rows and columns

-   Can be created manually with a `card` div:

    ```` {.yaml}
    ::: {.card}
    This text will be displayed within a card
    :::
    ````

-   Cards provide an **expand** button which appears at bottom right on hover
:::

## Card titles {.smaller auto-animate="true"}

Card titles can be provided as a cell option:

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|14|22"}
{{< include _card-titles.qmd >}}
````
:::

## Card titles {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="14,22"}
{{< include _card-titles.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/card-titles.png)
:::
:::

<!--
## Pop quiz!

::: your-turn
Which of the following cells will become a card in a dashboard?
:::

::: columns
::: {.column width=45%}
a.  

```{{r}}
library(palmerpenguins)
```

b.  

```{{r}}
x <- 2
```
:::

::: {.column width=35%}
c.  

```{{r}}
plot(cars)
```

d.  

```{{r}}
#| output: false
2 + 2
```
:::
::: {.column width=20%}
![](images/slido.png)
:::
:::
-->

## Value boxes {.smaller}

::: incremental
-   Value boxes are a great way to prominently display simple values within a dashboard

-   You can create value boxes in executable cells or plain markdown in divs

-   Value boxes use Bootstrap icons (<https://icons.getbootstrap.com>) and can be set to any color (e.g., with a HEX code) or color alias defined by the theme (we'll get to themes later!)

    | Color alias | Default theme color(s) |
    |-------------|------------------------|
    | `primary`   | Blue                   |
    | `secondary` | Gray                   |
    | `success`   | Green                  |
    | `info`      | Bright Blue            |
    | `warning`   | Yellow/Orange          |
    | `danger`    | Red                    |
    | `light`     | Light Gray             |
    | `dark`      | Black                  |
:::

## Value boxes {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|11|13-25|27-35|37-45|47-51|53"}
{{< include _valueboxes-py.qmd >}}
````
:::

## Value boxes {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="27-35,37-45,47-51"}
{{< include _valueboxes-py.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/valueboxes-py.png)
:::
:::

## Markdown text {.smaller}

::: incremental
-   You can include markdown text anywhere within a dashboard

-   Markdown text is automatically placed in cards, but you can also explicitly put them in cards with fenced divs, and add titles to cards

    ```` {.yaml}
    ::: {.card title="Title goes here"}
    Text goes here.
    :::
    ````

-   You can place markdown text and other cell output in a single card as well

    ```` {.yaml}
    ::: {.card title="Title goes here"}
    Text goes here.

    ```{{r}}
    # code generating output goes here
    ```
    :::    
    ````
:::

# Your turn

## Start

::: python-box
Clone the GitHub repo `posit-dev/smalldatasf-quarto-exercises` (<http://pos.it/smalldatasf-quarto-exercises>) and work on `olympicdash-py-2.qmd.`
:::

## Goal

Your goal is to create a dashboard that looks like the following:

![](images/olympicdash-r-2.png)

## Step 1 {.smaller}

::: your-turn
-   Add two pages - one for Summer Olympics and one for Winter Olympics.
-   Duplicate existing dashboard content for the two types of olympic games with subsets of data from the corresponding season.
:::

![](images/olympicdash-r-2-step-1.png)

{{< countdown minutes=5 >}}

## Step 2 {.smaller}

::: your-turn
In the Summer Olympics page:

-   Make the columns 65% (first) and 35% (second) of width of the dashboard.
-   Divide the first column into rows of 60% (first) and 40% (second) of height of the dashboard.
-   In the second row of the first column, combine markdown text about cancelled olympic games with the medals by year plot in the same cell.
:::

![](images/olympicdash-r-2-step-2.png)

{{< countdown minutes=5 >}}

## Step 3 {.smaller}

::: your-turn
In the Summer Olympics page:

-   Divide the second column into rows of 25% (first) and 75% (second) of height of the dashboard.
-   In the second row of the second column, create tables (using **great_tables** for Python) of top 30 and bottom 30 total medals by team, sorted in descending order for the top 30 and ascending order for the bottom 30 total medals, and add color to the table based on data values.
-   Place these tables in tabsets with descriptive text about table content in the same card/tab.
:::

![](images/olympicdash-r-2-step-3.png)

{{< countdown minutes=10 >}}

## Step 4 {.smaller}

::: your-turn
In the first row of the second column of the Summer Olympics page, add value boxes for highest numbers of gold, silver, and bronze medals with appropriate color for each medal and using the `award-fill` icon.
:::

![](images/olympicdash-r-2-step-4.png)

{{< countdown minutes=10 >}}

## Step 5 {.smaller}

::: your-turn
Duplicate dashboard content for the Winter Olympics page, share your results with your neighbor, and discuss approaches for not repeating yourself in your code.
:::

![](images/olympicdash-r-2-step-5.png)

{{< countdown minutes=5 >}}

# Theming

## Bootswatch themes {.smaller auto-animate="true"}

Quarto dashboards can be styled with one of the 25 themes from the Bootswatch project:

::: {data-id="code"}
```` {.yaml filename="dashboard-r.qmd" code-line-numbers="|3-5"}
{{< include _bootswatch.qmd >}}
````
:::

## Bootswatch themes {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard-r.qmd" code-line-numbers="3-5"}
{{< include _bootswatch.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/bootswatch.png)
:::
:::

## Bootswatch themes

::: {.large .center-align}
<https://bootswatch.com>
:::

```{=html}
<iframe src="https://bootswatch.com" title = "Bootswatch themes" frameborder="1" height="500" width="1000"></iframe>
```

## Custom themes

::: incremental
-   You can create an entirely custom theme and apply it to your dashboard:

    ```` {.yaml}
    format:
      theme: style.scss
    ````

-   Or you can customize an existing Bootswatch theme:

    ```` {.yaml}
    format:
      theme:
        - cosmo
        - custom.scss
    ````
:::


# Your turn

## Goal

Your goal is to create a dashboard that looks like the following:

![](images/olympicdash-py-3.png)

::: your-turn
- Update the theme to the appropriate Bootswatch theme.
:::

::: callout-tip
Work with your neighbor if you're having difficulty finding which theme to use.
:::

![](images/olympicdash-py-3.png)

{{< countdown minutes=3 >}}


# Learn more

## Theming Quarto

A lot more to learn on theming all things Quarto!

```{=html}
<iframe src="https://quarto.org/docs/dashboards/theming.html" title = "Bootswatch themes" frameborder="1" height="500" width="1000"></iframe>
```
