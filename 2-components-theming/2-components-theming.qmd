---
title: "Dashboard components and themes"
subtitle: "Small Data SF"
author:   
  - name: Sara Altman
    affiliations:
      - name: Posit, PBC
  - name: Isabella VelÃ¡squez
    affiliations:
      - name: Posit, PBC
date: "2024-09-23"
footer: "[pos.it/smalldatasf-quarto-workshop](https://pos.it/smalldatasf-quarto-workshop)"
logo: "../images/slides-logo.png"
format:
  revealjs:
    theme: ../style/slides.scss
    transition: fade
    slide-number: true
    chalkboard: true
---

# Dashboard components

## Navigation bar and pages

Icon, title, and author along with links to sub-pages if more than one page is defined.

![](images/navbar-pages.png)

## Sidebars, rows, columns, and tabsets

Rows and columns using markdown headings, with optional attributes to control height, width, etc.
Sidebars, mostly used for for interactive inputs.
Tabsets to further divide content.

![](images/sidebar-rows-columns-tabsets.png)

## Cards

Cards are containers for code cell outputs (e.g., plots, tables, value boxes) and free form markdown text.
The content of cards typically maps to *cells* in your notebook or source document.

![](images/cards.png)

# Navigation bar and pages

## Pages {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|11,21"}
{{< include _pages.qmd >}}
````
:::

## Pages {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="11"}
{{< include _pages.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/pages-scatter.png)
:::
:::

## Pages {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="21"}
{{< include _pages.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/pages-bar.png)
:::
:::

## Navigation buttons {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|6-15"}
{{< include _nav-buttons.qmd >}}
````
:::

## Navigation buttons {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="6-15"}
{{< include _nav-buttons.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/nav-buttons.png)
:::
:::

## Navigation buttons -- alternative {.smaller auto-animate="true"}

Special aliases are recognized for certain navigation buttons: `linkedin`, `facebook`, `reddit`, `twitter`, and `github`.

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|6-7"}
{{< include _nav-buttons-alternative.qmd >}}
````
:::

# Sidebars, rows, columns, and tabsets

## Sidebars

-   For information about the dashboard, data, etc. and/or for user inputs in interactive dashboards

-   Can be at the global or page level

## Sidebars {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|23-25"}
{{< include _sidebar-global.qmd >}}
````
:::

## Sidebars {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="23-25"}
{{< include _sidebar-global.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/sidebars-global-scatter.png)
:::
:::

## Sidebars {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="23-25"}
{{< include _sidebar-global.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/sidebars-global-bar.png)
:::
:::

## Heights and widths of rows and columns {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|13,25|15,19|27,37"}
{{< include _rows-then-columns-height-width.qmd >}}
````
:::

## Heights and widths of rows and columns {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="13,25,15,19,27,37"}
{{< include _rows-then-columns-height-width.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/rows-then-columns-heights-widths.png)
:::
:::

## Tabsets {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|13|25"}
{{< include _tabsets.qmd >}}
````
:::

## Tabsets {.smaller auto-animate="true"}

Each card within a row/column or each row/column within another becomes a tab:

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="13,25"}
{{< include _tabsets.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/tabsets.png)
:::
:::

## Value boxes {.smaller}

::: {.notes}
multiple ways to make value boxes
:::

::: incremental
-   Value boxes are a great way to prominently display simple values within a dashboard

-   You can create value boxes in executable cells or plain markdown in divs

-   Value boxes use Bootstrap icons (<https://icons.getbootstrap.com>) and can be set to any color (e.g., with a HEX code) or color alias defined by the theme (we'll get to themes later!)

    | Color alias | Default theme color(s) |
    |-------------|------------------------|
    | `primary`   | Blue                   |
    | `secondary` | Gray                   |
    | `success`   | Green                  |
    | `info`      | Bright Blue            |
    | `warning`   | Yellow/Orange          |
    | `danger`    | Red                    |
    | `light`     | Light Gray             |
    | `dark`      | Black                  |
:::

## Value boxes {auto-animate="true"}

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|11|13-25|27-35|37-45|47-51|53"}
{{< include _valueboxes-py.qmd >}}
````
:::

## Value boxes {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="27-35,37-45,47-51"}
{{< include _valueboxes-py.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/valueboxes-py.png)
:::
:::

## Markdown text {.smaller}

::: incremental
-   You can include markdown text anywhere within a dashboard

-   Markdown text is automatically placed in cards, but you can also explicitly put them in cards with fenced divs, and add titles to cards

    ```` {.yaml}
    ::: {.card title="Title goes here"}
    Text goes here.
    :::
    ````

-   You can place markdown text and other cell output in a single card as well

    ```` {.yaml}
    ::: {.card title="Title goes here"}
    Text goes here.

    ```{{r}}
    # code generating output goes here
    ```
    :::    
    ````
:::

# Your turn

## Start

::: python-box
Work on `olympicdash-2.qmd.`
:::

## Goal

Your goal is to create a dashboard that looks like the following:

![](images/olympicdash-2.png)

## Step 1 {.smaller}

::: your-turn

-   Make the columns 65% (first) and 35% (second) of width of the dashboard.
-   Divide the first column into rows of 60% (first) and 40% (second) of height of the dashboard.
-   In the second row of the first column, combine markdown text about cancelled Olympic games with the medals by year plot in the same cell.
:::

![](images/olympicdash-2-step-1.png)

{{< countdown minutes=5 >}}

## Step 2 {.smaller}

::: your-turn
-   Divide the second column into rows of 25% (first) and 75% (second) of height of the dashboard.
-   In the first row of this second column, add value boxes for highest numbers of gold, silver, and bronze medals with appropriate color for each medal and using the `award-fill` icon.
:::

::: {.callout-tip appearance="simple"}
Use the code commented with `TODO for Step 2` to help you create the value boxes.
:::

![](images/olympicdash-2-step-2.png)

{{< countdown minutes=10 >}}

## Step 3 {.smaller}

::: your-turn

-   In the second row of the second column, create tables (using the **great_tables** library) of top 30 and bottom 30 total medals by team, sorted in descending order for the top 30 and ascending order for the bottom 30 total medals, and add color to the table based on data values. Use [`data_color()`](https://posit-dev.github.io/great-tables/get-started/colorizing-with-data.html).
-   Place these tables in tabsets with descriptive text about table content in the same card/tab.
:::

::: {.callout-tip appearance="simple"}
Un-comment the code under `TODO for Step 3` and move it to the appropriate location. Use `olympics_sorted_descending_top30` and `olympics_sorted_ascending_bottom30` to create the tables.   
:::

![](images/olympicdash-2-step-3.png)

{{< countdown minutes=10 >}}

## Interactive plotting {.smaller}

-   We've been creating static plots with `plotnine`
-   But you can also add interactive plots to your dashboard, e.g., with `plotly`

::: python-box
ðŸ”—  [https://saraaltman.quarto.pub/olympicdash-plotly/](https://saraaltman.quarto.pub/olympicdash-plotly/)
:::


## 

```{=html}
<iframe src="https://saraaltman.quarto.pub/olympicdash-plotly/" title = "Olympic Games dashboard, with plotly"  height="900" width="1440"></iframe>
```

# Theming

## Bootswatch themes {.smaller auto-animate="true"}

Quarto dashboards can be styled with one of the 25 themes from the Bootswatch project:

::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="|3-5"}
{{< include _bootswatch.qmd >}}
````
:::

## Bootswatch themes {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: {data-id="code"}
```` {.yaml filename="dashboard.qmd" code-line-numbers="3-5"}
{{< include _bootswatch.qmd >}}
````
:::
:::

::: {.column width="60%"}
![](images/bootswatch.png)
:::
:::

## Bootswatch themes

::: {.large .center-align}
<https://bootswatch.com>
:::

```{=html}
<iframe src="https://bootswatch.com" title = "Bootswatch themes" frameborder="1" height="500" width="1000"></iframe>
```

## Custom themes

::: incremental
-   You can create an entirely custom theme and apply it to your dashboard:

    ```` {.yaml}
    format:
      theme: style.scss
    ````

-   Or you can customize an existing Bootswatch theme:

    ```` {.yaml}
    format:
      theme:
        - cosmo
        - custom.scss
    ````
:::


# Your turn

## Goal

Your goal is to create a dashboard that looks like the following:

![](images/olympicdash-3.png)

## Step 1 {.smaller}

::: your-turn
- Update the theme to the appropriate Bootswatch theme.
:::

![](images/olympicdash-3.png)

{{< countdown minutes=2 >}}


# Learn more

## Theming Quarto

A lot more to learn on theming all things Quarto!

```{=html}
<iframe src="https://quarto.org/docs/dashboards/theming.html" title = "Bootswatch themes" frameborder="1" height="500" width="1000"></iframe>
```
