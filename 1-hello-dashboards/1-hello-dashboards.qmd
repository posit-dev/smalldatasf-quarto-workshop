---
title: "Hello, dashboards!"
subtitle: "From Notebooks to Dashboards with Quarto Workshop"
author:   
  - name: Sara Altman and Isabella Vel√°squez
    affiliations:
      - name: Posit, PBC
date: "2024-09-23"
# TODO: FIX LINK
footer: "[pos.it/quarto-dashboards-24](https://pos.it/quarto-dashboards-24)"
logo: "../images/slides-logo.png"
format:
  revealjs:
    theme: ../style/slides.scss
    transition: fade
    slide-number: true
    chalkboard: true
---

# Hello, Dashboards!

## Quarto ‚ûù many outputs {background-image="images/quarto-to-docs.png"}

With Quarto you can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books, and more...

## Quarto ‚ûù dashboards {background-image="images/quarto-to-dashboard.png"}

Since Quarto 1.4!

## Quarto version

::: callout-tip
Run the following in your Terminal to find your Quarto version:

``` {.bash filename="Terminal"}
quarto --version
```
:::

##  {.no-line background-image="images/dashboards/customer-churn.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/dashing-through-snow.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/earthquakes.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/gapminder.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/housing-market.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/labor.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/model-card.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/mynorfolk.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/nfl-injuries.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/retirement.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/shiny-penguins.png" background-size="contain"}

##  {.no-line background-image="images/dashboards/stock-explorer.png" background-size="contain"}

## üç∞ Olympic Games dashboard - Python

<!-- TODO: update link-->
::: python-box
üîó [mine.quarto.pub/olympic-games-py](https://mine.quarto.pub/olympic-games-py/)
:::

```{=html}
<iframe src="https://mine.quarto.pub/olympic-games-py/" title = "Olympic Games dashboard" frameborder="1" height="575" width="1200"></iframe>
```

## Notebook ‚ûù Dashboard

::: python-box
``` {.markdown filename="olympicdash-py.qmd" style="overflow-y: hidden" code-line-numbers="|3"}
---
title: "Olympic Games"
format: dashboard
---

# notebook content goes here...
```
:::

# Dashboard basics

## Cards {auto-animate="true" auto-animate-easing="ease-in-out"}

Dashboards are composed of **cards**.

::: r-hstack
::: {data-id="box1" auto-animate-delay="0" style="background: #FF6349; width: 200px; height: 150px; margin: 10px; border: 3px solid #000;"}
:::

::: {data-id="box2" auto-animate-delay="0.1" style="background: #FF6C9F; width: 200px; height: 150px; margin: 10px; border: 3px solid #000;"}
:::

::: {data-id="box3" auto-animate-delay="0.2" style="background: #FF75EF; width: 200px; height: 150px; margin: 10px; border: 3px solid #000;"}
:::
:::

## Rows and columns {auto-animate="true" auto-animate-easing="ease-in-out"}

Cards are arranged into **rows** and **columns**.

::: r-stack
::: {data-id="box1" auto-animate-delay="0" style="background: #FF6349; width: 235px; height: 145px; margin-top: 30px; position: absolute; left: 275px; border: 3px solid #000;"}
:::

::: {data-id="box2" style="background: #FF6C9F; width: 235px; height: 145px; margin-top: 30px; position: absolute; right: 275px; border: 3px solid #000;"}
:::

::: {data-id="box3" style="background: #FF75EF; width: 500px; height: 300px; margin-top: 200px; border: 3px solid #000;"}
:::
:::

## Layouts {auto-animate="true" auto-animate-easing="ease-in-out"}

**Pages**, **tabsets**, and **sidebars** allow for more advanced layouts.

::: r-stack
::: {data-id="box1" auto-animate-delay="0" style="background: #FF6349; width: 235px; height: 145px; margin-top: 30px; position: absolute; left: 275px; border: 3px solid #000;"}
:::

::: {data-id="box2" style="background: #FF6C9F; width: 235px; height: 145px; margin-top: 30px; position: absolute; right: 275px; border: 3px solid #000;"}
:::

::: {data-id="box3" style="background: #FF75EF; width: 500px; height: 300px; margin-top: 200px; border: 3px solid #000;"}
:::

::: {data-id="box4" auto-animate-delay="0" style="background: #D95127; width: 150px; height: 470px; margin-top: 30px; position: absolute; right: 800px; border: 3px solid #000;"}
:::
:::

## Step-by-step

Let's make a dashboard, step-by-step

# First dashboard

## Step 1: `format: dashboard` {auto-animate="true"}

::: python-box
``` {.yaml filename="dashboard-py.qmd"}
---
title: "My first Quarto dashboard"
format: dashboard
---
```
:::

## Step 2: Add a card {auto-animate="true"}

::: python-box
```` {.yaml filename="dashboard-py.qmd" code-line-numbers="|10-16"}
---
title: "My first Quarto dashboard"
format: dashboard
---

```{{python}}
from plotnine import ggplot, aes, geom_point
from plotnine.data import mpg
```

```{{python}}
(
    ggplot(mpg, aes(x = "cty", y = "hwy"))
    + geom_point()
)
```
````
:::

## Step 2: Add a card {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: python-box
```` {.yaml filename="dashboard-py.qmd"}
---
title: "My first Quarto dashboard"
format: dashboard
---

```{{python}}
from plotnine import ggplot, aes, geom_point
from plotnine.data import mpg
```

```{{python}}
(
    ggplot(mpg, aes(x = "cty", y = "hwy"))
    + geom_point()
)
```
````
:::
:::

::: {.column width="60%"}
![](images/first-dashboard-py-1.png)
:::
:::

## Step 3: Add another card {auto-animate="true"}

::: python-box
```` {.yaml filename="dashboard-py.qmd" code-line-numbers="|18-23"}
---
title: "My first Quarto dashboard"
format: dashboard
---

```{{python}}
from plotnine import ggplot, aes, geom_point, geom_bar
from plotnine.data import mpg
```

```{{python}}
(
    ggplot(mpg, aes(x = "cty", y = "hwy"))
    + geom_point()
)
```

```{{python}}
(
    ggplot(mpg, aes(x = "drv"))
    + geom_bar()
)
```
````
:::

## Step 3: Add another card {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: python-box
```` {.yaml filename="dashboard-py.qmd"}
---
title: "My first Quarto dashboard"
format: dashboard
---

```{{python}}
from plotnine import ggplot, aes, geom_point, geom_bar
from plotnine.data import mpg
```

```{{python}}
(
    ggplot(mpg, aes(x = "cty", y = "hwy"))
    + geom_point()
)
```

```{{python}}
(
    ggplot(mpg, aes(x = "drv"))
    + geom_bar()
)
```
````
:::
:::

::: {.column width="60%"}
![](images/first-dashboard-py-2.png)
:::
:::

## Step 4: Add titles to cards {auto-animate="true"}

::: python-box
```` {.yaml filename="dashboard-py.qmd" code-line-numbers="|12,20"}
---
title: "My first Quarto dashboard"
format: dashboard
---

```{{python}}
from plotnine import ggplot, aes, geom_point, geom_bar
from plotnine.data import mpg
```

```{{python}}
#| title: Highway vs. city mileage
(
    ggplot(mpg, aes(x = "cty", y = "hwy"))
    + geom_point()
)
```

```{{python}}
#| title: Drive types
(
    ggplot(mpg, aes(x = "drv"))
    + geom_bar()
)
```
````
:::

## Step 4: Add titles to cards {.smaller auto-animate="true"}

::: columns
::: {.column width="40%"}
::: python-box
```` {.yaml filename="dashboard-py.qmd"}
---
title: "My first Quarto dashboard"
format: dashboard
---

```{{python}}
from plotnine import ggplot, aes, geom_point, geom_bar
from plotnine.data import mpg
```

```{{python}}
#| title: Highway vs. city mileage
(
    ggplot(mpg, aes(x = "cty", y = "hwy"))
    + geom_point()
)
```

```{{python}}
#| title: Drive types
(
    ggplot(mpg, aes(x = "drv"))
    + geom_bar()
)
```
````
:::
:::

::: {.column width="60%"}
![](images/first-dashboard-py-3.png)
:::
:::

## Steps 1 - 4 {auto-animate="true"}

![](images/first-dashboard-py-3.png){fig-align="center"}

# Your turn

## Start {.smaller}

::: python-box
Clone the GitHub repo `posit-dev/small-data-sf-olympicdash` (<https://github.com/posit-dev/small-data-sf-olympicdash>) and work on `olympicdash-py-1.qmd.`
:::

## Goal

Your goal is to create the following dashboard.

::: python-box
![](images/olympicdash-py-1.png)
:::


## Step 1

::: your-turn
-   Turn the output to a dashboard.
-   Add `title`s to code cells.
:::

:::{.column width="80%"}
::: python-box
![](images/olympicdash-py-1.png)
:::
:::

{{< countdown minutes=5 >}}



## Step 2

::: your-turn 
-   Add a GitHub icon and link to a GitHub repository (that may or may not contain the code for the dashboard you're building).
-   Add the olympics logo from the `images` folder.
:::

:::{.column width="80%"}
::: python-box
![](images/olympicdash-py-1.png)
:::
:::

{{< countdown minutes=5 >}}


## Step 3

::: your-turn
Reorganize the cards into rows and columns as shown below.
:::

:::{.column width="80%"}
::: python-box
![](images/olympicdash-py-1.png)
:::
:::

{{< countdown minutes=5 >}}
