{
  "hash": "4b4f07d58750f8f5a85167a7ee3ac574",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Intro to Quarto\"\nsubtitle: \"Small Data SF\"\nauthor:   \n  - name: Sara Altman\n    affiliations:\n      - name: Posit, PBC\n  - name: Isabella Velásquez\n    affiliations:\n      - name: Posit, PBC\nfooter: \"[pos.it/smalldatasf-quarto-workshop](https://pos.it/smalldatasf-quarto-workshop)\"\nlogo: \"../images/slides-logo.png\"\nformat:\n  revealjs:\n    theme: ../style/slides.scss\n    transition: fade\n    slide-number: true\n    chalkboard: true\n---\n\n\n\n\n\n\n# Welcome\n\n## About us\n\n::: columns\n::: {.column width=\"50%\"}\n-   Data Science Educator\n\n    Developer Relations, Posit\n:::\n\n::: {.column width=\"50%\" style=\"text-align: center;\"}\n![](images/sara.jpg){fig-alt=\"Sara's headshot\" fig-align=\"center\" width=250px style=\"border-radius: 50%;\"}\n\n**Sara Altman**\n\n:::\n:::\n\n## About us\n\n::: columns\n::: {.column width=\"50%\"}\n-   Sr. Product Marketing Manager\n\n    Developer Relations, Posit\n:::\n\n::: {.column width=\"50%\" style=\"text-align: center;\"}\n![](images/isabella.jpg){fig-alt=\"Isabella's headshot\" fig-align=\"center\" width=250px style=\"border-radius: 50%;\"}\n\n**Isabella Velásquez**\n\n[{{< fa brands github >}} \\@ivelasq](https://github.com/ivelasq)\n\n[{{< fa link >}} ivelasq.rbind.io](https://ivelasq.rbind.io)\n\n:::\n:::\n\n## About you\n\n::: task\nPlease share\n\n-   Name\n-   Professional affiliation\n-   What do you use computational notebooks for?\n-   What do you hope to get out of this tutorial?\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_deb45f0d\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">04</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n## Meeting you where you are\n\n::: columns\n::: {.column width=\"50%\"}\n::: {.fragment .fade-in-then-semi-out}\nThese materials are pitched at someone who:\n\n-   knows some Python + Markdown\n\n-   has worked in VS Code\n\n-   wants to learn about Quarto\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: {.fragment .fade-in}\nWe'll teach you\n\n- What is Quarto\n\n- How to create documents with Quarto\n\n- How to create a dashboard from a notebook\n:::\n:::\n:::\n\n## Workshop structure\n\n::: columns\n::: {.column .fragment width=\"33%\"}\n**My turn**\n\n-   Lecture segments\n-   Feel free to just watch, take notes, browse docs, or tinker around with the code\n:::\n\n::: {.column .fragment width=\"33%\"}\n::: demo\n**Our turn**\n\n-   Lecture segments + live coding\n-   Follow along with live coding\n:::\n:::\n\n::: {.column .fragment width=\"33%\"}\n::: task\n**Your turn**\n\n-   Practice exercises for you\n-   Work on your own or with the person next to you\n:::\n:::\n:::\n\n## Getting help\n\n-   During **my turn** and **your turn** segments -- raise your hand\n\n-   During **our turn** segments -- also feel free to raise your hand for questions but if your question seems specific to your setup, we might come around and help during the next your turn break\n\n## A tour of Quarto\n\n::: {.hand-blue-large style=\"text-align: center;\"}\nSit back and enjoy!\n:::\n\n::: demo\n-   Understanding the relationship between Quarto and the Jupyter engine\n-   Using Quarto in VS Code\n-   Creating Quarto documents (metadata, markdown text, and code)\n-   Working with Quarto projects\n:::\n\n# What is Quarto?\n\n## Quarto ...\n\nis an innovative, open-source scientific and technical publishing system compatible with Jupyter Notebooks and other popular media.\n\n![](images/demo-quarto.png){width=75% fig-align=\"center\"}\n\n## With Quarto ...\n\nyou can **weave** together **narrative** and **code** to produce elegantly formatted output such as documents, web pages, blog posts, books, dashboards, and more, with...\n\n::: incremental\n-   **consistent** implementation of attractive and handy features across outputs: tabsets, code-folding, syntax highlighting, etc.\n-   defaults that meet accessibility guidelines as well as features that enable good practices for producing **accessible** documents\n-   natively **multi-lingual**, supporting for multiple languages like Python, Julia, Observable, and more via the Jupyter engine for executable code chunks\n:::\n\n## A pause\n\n::: task\nWhere does the name \"Quarto\" come from?\n:::\n\n[Quarto on Wikipedia](https://en.wikipedia.org/wiki/Quarto){preview-link=\"true\"}\n\n\n::: aside\nSource: <https://en.wikipedia.org/wiki/Quarto>\n:::\n\n# Quarto formats\n\n## One install, \"Batteries included\" {.smaller}\n\n-   Quarto comes **\"batteries included\"** straight out of the box:\n\n    -   HTML reports and websites\n\n    -   PDF reports\n\n    -   MS Office (Word, Powerpoint)\n\n    -   Presentations (Powerpoint, Beamer, `revealjs`)\n\n    -   Books\n\n    -   Dashboards\n\n    -   ...\n\n. . .\n\n-   Any language, *exact* same approach and syntax\n\n## Many Quarto formats {.smaller}\n\n| Feature          | Quarto                                                                                                                                                                                      |\n|------------------|------------------------------------------------------|\n| Basic Formats    | [html](https://quarto.org/docs/output-formats/html-basics.html), [pdf](https://quarto.org/docs/output-formats/pdf-basics.html), [docx](https://quarto.org/docs/output-formats/ms-word.html) |\n| Beamer           | [beamer](https://quarto.org/docs/presentations/beamer.html)                                                                                                                                 |\n| PowerPoint       | [pptx](https://quarto.org/docs/presentations/powerpoint.html)                                                                                                                               |\n| HTML Slides      | [revealjs](https://quarto.org/docs/presentations/revealjs/)                                                                                                                                 |\n| Advanced Layout  | [Quarto Article Layout](https://quarto.org/docs/authoring/article-layout.html)                                                                                                              |\n| Cross References | [Quarto Crossrefs](https://quarto.org/docs/authoring/cross-references.html)                                                                                                                 |\n| Websites & Blogs | [Quarto Websites](https://quarto.org/docs/websites/), [Quarto Blogs](https://quarto.org/docs/websites/website-blog.html)                                                                    |\n| Books            | [Quarto Books](https://quarto.org/docs/books/)                                                                                                                                              |\n| Interactivity    | [Quarto Interactive Documents](https://quarto.org/docs/interactive/shiny/)                                                                                                                  |\n| Journal Articles | [Journal Articles](https://quarto.org/docs/journals/index.html)                                                                                                                             |\n| Dashboards       | [Dashboards](https://quarto.org/docs/dashboards/)                                                                                                                                                           |\n\n: {tbl-colwidths=\"\\[25,75\\]\"}\n\n# How it works\n\n## Revisit: What is Quarto? {.smaller}\n\nQuarto is a command line interface (**CLI**) that renders plain text formats (`.qmd`, `.rmd`, `.md`) OR mixed formats (`.ipynb`/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more.\n\n. . .\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code  code-line-numbers=\"|1|2|10|15|16\"}\n  Usage:   quarto \n  Version: 1.5.57\n\n  Description:\n\n    Quarto CLI\n\n  Options:\n\n    -h, --help     - Show this help.                            \n    -V, --version  - Show the version number for this program.  \n\n  Commands:\n\n    render          [input] [args...]     - Render files or projects to various document types.\n    preview         [file] [args...]      - Render and preview a document or website project.  \n    serve           [input]               - Serve a Shiny interactive document.                \n    create          [type] [commands...]  - Create a Quarto project or extension               \n    create-project  [dir]                 - Create a project for rendering multiple documents  \n    convert         <input>               - Convert documents to alternate representations.    \n    pandoc          [args...]             - Run the version of Pandoc embedded within Quarto.  \n    typst           [args...]             - Run the version of Typst embedded within Quarto.   \n    run             [script] [args...]    - Run a TypeScript, R, Python, or Lua script.        \n    add             <extension>           - Add an extension to this folder or project         \n    install         [target...]           - Installs an extension or global dependency.        \n    publish         [provider] [path]     - Publish a document or project to a provider.       \n    check           [target]              - Verify correct functioning of Quarto installation. \n    help            [command]             - Show this help or the help of a sub-command.\n```\n:::\n\n\n\n\n## Under the hood\n\n![](images/ipynb-how-it-works.png){fig-align=\"center\"}\n\n::: incremental\n-   `jupyter` evaluates Python code and returns a `.md` file along with the evaluated code\n-   Quarto applies Lua filters + CSS/LaTeX which is then evaluated alongside the `.md` file by Pandoc and converted to a final output format\n:::\n\n## Under the hood\n\nwith a wider lens...\n\n![](images/quarto-how-it-works.png){fig-align=\"center\"}\n\n::: incremental\n-   `jupyter` or `knitr` evaluates Python, Julia, R, or Observable code and returns a `.md` file along with the evaluated code\n-   Quarto applies Lua filters + CSS/LaTeX which is then evaluated alongside the `.md` file by Pandoc and converted to a final output format\n:::\n\n## Converting notebooks\n\nYou can convert between `.ipynb` and `.qmd` representations of a notebook using the `quarto convert` \ncommand. \n\nFor example:\n\n```{.bash filename=\"Terminal\"}\nquarto convert my-document.ipynb # converts to qmd\nquarto convert my-document.qmd   # converts to ipynb\n```\n\n# Quarto and VS Code\n\n## From the comfort of your own ~~home~~workspace\n\n::: r-stack\n![](https://quarto.org/docs/tools/images/rstudio-preview.png){.fragment fig-alt=\"A screenshot of a Quarto document rendered inside RStudio\" width=\"900\"}\n\n![](https://quarto.org/docs/tools/images/jupyterlab-preview.png){.fragment fig-alt=\"A screenshot of a Quarto document rendered inside JupyterLab\" width=\"900\"}\n\n![](https://quarto.org/docs/computations/images/python-vscode.png){.fragment fig-alt=\"A screenshot of a Quarto document rendered inside VSCode\" width=\"900\"}\n\n:::\n\n## Quarto VS Code extension\n\n::: incremental\n\n-   Integrated render and preview for Quarto documents.\n-   Syntax highlighting for markdown and embedded languages\n-   Completion and diagnostics for YAML options\n-   Completion for embedded languages (e.g. Python, R, Julia, etc.)\n-   Commands and key-bindings for running cells and selected lines\n\n:::\n\n## Previewing and rendering\n\n![](images/demo-quarto.png){fig-align=\"center\"}\n\n## Previewing and rendering\n\n![](images/demo-quarto-left.png){fig-align=\"center\"}\n\n## Previewing and rendering\n\n![](images/demo-quarto-right.png){fig-align=\"center\"}\n\n## Previewing\n\n**in VS Code**\n\n-   Option 1: In the Terminal via `quarto preview`\n\n```{.bash filename=\"Terminal\"}\nquarto preview my-document.qmd\n```\n\n. . .\n\n-   Option 2: Using the Quarto Extension and clicking on Preview\n\n. . .\n\n-   Option 3: <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + K\n\n\n\n## Rendering\n\n**in VS Code**\n\n-   Option 1: In the Terminal via `quarto render`\n\n```{.bash filename=\"Terminal\"}\nquarto render\n```\n\n. . .\n\n-   Option 2: Use the Command Palette: **Quarto: Render Project**\n\n## Your turn {.smaller}\n\n::: task\n**1. Software:** Download and install Python and the latest version of Quarto:\n\n-   Python 3: <https://www.python.org/downloads/>\n-   Quarto 1.5.57: <https://quarto.org/docs/get-started/>\n\n**2. Tools:** Dowload and install VS Code and Jupyter and the Quarto extensions:\n\n- VS Code: <https://code.visualstudio.com/>\n- Quarto Extension: <https://marketplace.visualstudio.com/items?itemName=quarto.quarto>\n- Jupyter Extension: <https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter>\n\n:::\n\n## Your turn {.smaller}\n\n::: task\n\n**3. Exercises:** Go to [`pos.it/smalldatasf-quarto-exercises`](https://pos.it/smalldatasf-quarto-exercises), click on *Use this template* then *Create a new repository*. Check *Include all branches*. Choose your personal GitHub repo as the Owner and give the repository a name.\n\n**4. Packages:**  Open *VS Code*. Under *Start*, click on *Clone Git Repository*, and paste the URL of your exercise repo. \n\n  * Open the cloned project. In the Command Palette, go to `Python: Create Environment...` and choose `Venv`, then choose the (latest) Python version you have installed. \n  * Check the box for `requirements.txt` in the *Select dependencies to install* menu and hit *OK*.\n\nSee full instructions under **Setup**: [pos.it/smalldatasf-quarto-workshop](https://pos.it/smalldatasf-quarto-workshop)\n\n**Then:** In VS Code, open the `olympicdash-0.ipynb` file. \n\n-   Convert the file to `.qmd` using `quarto convert`.\n\n-   Preview the `.qmd` file.\n\n:::\n\n\n# Quarto documents\n\n## Anatomy of a Quarto document\n\nThree components:\n\n1.  Metadata: YAML\n\n2.  Text: Markdown\n\n3.  Code: Executed via `jupyter` or `knitr`\n\n. . .\n\n**Weave it all together**, and you have beautiful, powerful, and useful outputs!\n\n## Anatomy of a Quarto document\n\n**Metadata: YAML**\n\n:::: columns\n::: {.column .fragment}\n\n````{.markdown filename=\"my-document.qmd\"}\n---\ntitle: \"Olympic Games\"\nformat: html\n---\n````\n\n:::\n\n::: {.column .fragment}\n* Yet another markup language”\n* Metadata of your document\n* Demarcated by three dashes (`---`) on either end\n*  Uses key-value pairs in the format `key: value`\n:::\n\n::::\n\n## Anatomy of a Quarto document\n\n**Text: Markdown**\n\n````{.markdown filename=\"my-document.qmd\"}\n---\ntitle: \"Olympic Games\"\nformat: html\n---\n\nThis dataset records Olympic athlete details.\n````\n\n. . .\n\n* Markdown is a lightweight language for creating formatted text\n* Quarto is based on Pandoc and uses its variation of markdown as its underlying document syntax\n\n## Anatomy of a Quarto document\n\n**Text: Markdown**\n\n\n\n\n```{=html}\n<div class=\"sourceCode\">\n<pre class=\"sourceCode markdown\">\n<code class=\"sourceCode markdown\">\nThe `olympic.csv` dataset records [**Olympic**](https://en.wikipedia.org/wiki/Olympic_Games) athlete details.\n</code>\n</pre>\n</div>\n```\n\n\n\n\nThe `olympic.csv` dataset records [**Olympic**](https://en.wikipedia.org/wiki/Olympic_Games) athlete details.\n\n## Anatomy of a Quarto document\n\n**Text: Markdown**\n\n+-----------------------------------+-------------------------------+\n| Markdown syntax                   | Output                        |\n+===================================+===============================+\n|     *italics* and **bold**        | *italics* and **bold**        |\n+-----------------------------------+-------------------------------+\n|     superscript^2^ / subscript~2~ | superscript^2^ / subscript~2~ |\n+-----------------------------------+-------------------------------+\n|     ~~strikethrough~~             | ~~strikethrough~~             |\n+-----------------------------------+-------------------------------+\n|     `verbatim code`               | `verbatim code`               |\n+-----------------------------------+-------------------------------+\n\n## Anatomy of a Quarto document\n\n**Code**\n\n````{.markdown filename=\"my-document.qmd\" code-line-numbers=|8-16}\n---\ntitle: \"Olympic Games\"\nformat: html\n---\n\nThis dataset records Olympic athlete details.\n\n```{{python}}\nfrom plotnine import ggplot, aes, geom_bar\n\n(\n    ggplot(mpg, aes(x = \"country\", y = \"medals\"))\n    + geom_bar()\n)\n```\n\n````\n\n## Anatomy of a Quarto document\n\n**Code**\n\n:::: columns\n::: {.column}\n\n````{.markdown filename=\"my-document.qmd\" code-line-numbers=8-16}\n---\ntitle: \"Olympic Games\"\nformat: html\n---\n\nThis dataset records Olympic athlete details.\n\n```{{python}}\nfrom plotnine import ggplot, aes, geom_bar\n\n(\n    ggplot(mpg, aes(x = \"country\", y = \"medals\"))\n    + geom_bar()\n)\n```\n\n````\n\n:::\n\n::: {.column}\n* Code chunks begin and end with three backticks (usually)\n* Code chunks are identified with a programming language in between `{}`\n:::\n\n::::\n\n## Anatomy of a Quarto document\n\n**Inline code** executes code *within Markdown*\n\n````{.markdown filename=\"my-document.qmd\"}\n```{{python}}\nmedals = 5\n```\n\nThe number of medals is `{python} medals`.\n````\n\nResults in:\n\nThe number of medals is 5.\n\n## Anatomy of a Quarto document\n\n**Code** can include optional chunk options, in YAML style, identified by `#|` at the beginning of the line\n\n````{.markdown code-line-numbers=|9}\n---\ntitle: \"Olympic Games\"\nformat: html\n---\n\nThis dataset records Olympic athlete details.\n\n```{{python}}\n#| include: false\nfrom plotnine import ggplot, aes, geom_bar\n\n(\n    ggplot(mpg, aes(x = \"country\", y = \"medals\"))\n    + geom_bar()\n)\n```\n\n````\n\n## Anatomy of a Quarto document\n\n**Code** can include optional chunk options, in YAML style, identified by `#|` at the beginning of the line\n\n````{.markdown code-line-numbers=9-10}\n---\ntitle: \"Olympic Games\"\nformat: html\n---\n\nThis dataset records Olympic athlete details.\n\n```{{python}}\n#| include: false\n#| fig.alt: \"A scatterplot with country on the x-axis and medals on the y-axis.\"\nfrom plotnine import ggplot, aes, geom_bar\n\n(\n    ggplot(mpg, aes(x = \"country\", y = \"medals\"))\n    + geom_bar()\n)\n```\n\n````\n\n## Anatomy of a Quarto document\n\n**Code** can include optional chunk options, in YAML style, identified by `#|` at the beginning of the line\n\n+--------------+------------------------------------------------+\n| Option       | Description                                    |\n+==============+================================================+\n| `eval`       | Evaluate the code chunk                        |\n+--------------+------------------------------------------------+\n| `echo`       | Include the source code                        |\n+--------------+------------------------------------------------+\n| `warning`    | Include warnings                               |\n+--------------+------------------------------------------------+\n| `include`    | Include code and results                       |\n+--------------+------------------------------------------------+\n\nOther options: <https://quarto.org/docs/computations/execution-options.html>\n\n\n## Your turn {.smaller}\n\nIn VS Code, open the `olympicdash-0.qmd` file. \n\n::: task\n-   In the YAML, add an `author` field and add your name.\n\n-   Add some Markdown text to the document.\n\n-   For one of the tables, add the chunk option `echo: false`.\n\n-   Add this to the top of the plotnine chart to set the order of `medal` variable.\n\n```python\nolympics['medal'] = pd.Categorical(\n    olympics['medal'], \n    categories=[\"Gold\", \"Silver\", \"Bronze\"], \n    ordered=True\n)\n```\n:::\n\nSave in between each step and see how the preview changes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountdown(minutes = 10)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_cbaa283c\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n# Authoring Quarto\n\n## Images and links\n\n+------------------------------------+---------------------------------+\n| Markdown syntax                    | Output                          |\n+====================================+=================================+\n|     <https://quarto.org>           | <https://quarto.org>            |\n+------------------------------------+---------------------------------+\n|     [Quarto](https://quarto.org)   | [Quarto](https://quarto.org)    |\n+------------------------------------+---------------------------------+\n|     ![](penguin.jpg)               | ![](penguin.jpg)                |\n+------------------------------------+---------------------------------+\n\n## Tables\n\n### Tables\n\n``` {{markdown}}\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|    12 | 12   | 12      |   12   |\n|   123 | 123  | 123     |  123   |\n|     1 | 1    | 1       |   1    |\n```\n\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|    12 | 12   | 12      |   12   |\n|   123 | 123  | 123     |  123   |\n|     1 | 1    | 1       |   1    |\n\n## Divs and Spans\n\nYou can add classes, attributes, and other identifiers to content using Divs and Spans.\n\n**Divs**\n\n    ::: {.border}\n    This content can be styled with a border\n    :::\n\n**Spans**\n\n    [This is *some text*]{.class key=\"val\"}\n\n## Divs\n\n**Callout blocks**\n\n```{.markdown filename=\"my-document.qmd\"}\n:::{.callout-tip}\n\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n\n:::\n```\n\n. . .\n\n::: callout-tip\nNote that there are five types of callouts, including: `note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n## Divs\n\n**Multiple columns**\n\n```{.markdown filename=\"my-document.qmd\"}\n::: {layout-ncol=2}\n\n![](penguin.jpg)\n\nPhoto by <a href=\"https://unsplash.com/@corneliusventures?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Cornelius Ventures</a> on <a href=\"https://unsplash.com/s/photos/penguin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n:::\n```\n\n. . .\n\n::: {layout-ncol=\"2\"}\n![](penguin.jpg)\n\nPhoto by <a href=\"https://unsplash.com/@corneliusventures?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Cornelius Ventures</a> on <a href=\"https://unsplash.com/s/photos/penguin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n:::\n\n\n## Divs\n\n**Tabsets**\n\n```{.markdown filename=\"my-document.qmd\"}\n::: {.panel-tabset group=\"language\"}\n## R\n\n`library(dplyr)`\n\n## Python\n\n`import pandas as pd`\n:::\n```\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n`library(dplyr)`\n\n## Python\n\n`import pandas as pd`\n:::\n\n## Spans\n\n```{.markdown filename=\"my-document.qmd\"}\nThis is text that is [red]{style=\"color:red;\"}.\n```\n\n. . .\n\nThis is text that is [red]{style=\"color:red;\"}.\n\n```{.markdown filename=\"my-document.qmd\"}\n![](penguin.jpg){fig-alt=\"A photo of a penguin jumping\"}\n```\n\n![](penguin.jpg){fig-alt=\"A photo of a penguin jumping\"}\n\n## Theming\n\n:::: columns\n::: {.column}\n\n````{.markdown code-line-numbers=4 filename=\"my-document.qmd\"}\n---\ntitle: \"Olympic Games\"\nformat: html\ntheme: sketchy\n---\n````\n:::\n\n::: {.column .fragment}\n![](images/sketchy.png)\n:::\n::::\n\n## Your turn {.smaller}\n\n-   Change the html theme to `sketchy`. (See <https://quarto.org/docs/output-formats/html-themes.html> for documentation on HTML theming.)\n\n-   Edit the Markdown text you wrote in the previous exercise so that one of the words is blue.\n\n-   Add a code chunk cell with the option `include: false`. Use the dataset to find the most gold medals by team.\n\n-   Use inline code to write a sentence such as: \"The most gold medals won by a single team are [count].\"\n\n-   Add a Div of your choice.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountdown(minutes = 10)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_d2545b2e\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n# Changing formats\n\n## Changing formats\n\n:::: columns\n::: {.column}\n\n````{.markdown code-line-numbers=3 filename=\"my-document.qmd\"}\n---\ntitle: \"Olympic Games\"\nformat: revealjs\n---\n````\n:::\n\n::: {.column .fragment}\n![](images/revealjs.png)\n:::\n::::\n\n## Changing formats\n\n:::: columns\n::: {.column}\n\n````{.markdown code-line-numbers=3 filename=\"my-document.qmd\"}\n---\ntitle: \"Olympic Games\"\nformat: pdf\n---\n````\n:::\n\n::: {.column .fragment}\n![](images/pdf.png)\n:::\n::::\n\n## Changing formats\n\n:::: columns\n::: {.column}\n\n````{.markdown code-line-numbers=3 filename=\"my-document.qmd\"}\n---\ntitle: \"Olympic Games\"\nformat: dashboard\ntheme: sketchy\n---\n````\n:::\n\n::: {.column .fragment}\n![](images/dashboard.png)\n:::\n::::\n\n# Documents to projects\n\n## Anatomy of a Quarto project\n\n::: r-fit-text\n> [A Quarto Project is a directory]{.fragment} [that contains a file called `_quarto.yml`.]{.fragment}\n:::\n\n\\\n\n::: columns\n::: {.column .fragment .fade-right width=\"50%\"}\nThis is a Quarto Project.\n\n```         \nmy-folder/\n├── _quarto.yml\n├── my-document.ipynb\n```\n:::\n\n::: {.column .fragment .fade-left width=\"50%\"}\nThis is not.\n\n```         \nmy-folder/\n├── my-document.ipynb\n```\n:::\n:::\n\n## \\_quarto.yml {auto-animate=\"true\"}\n\nA YAML file with particular keys and values that Quarto recognizes. Unrecognized keys are ignored.\n\n``` {.yaml .fragment filename=\"_quarto.yml\"}\nproject:\n  title: \"Olympic Games\"\n```\n\n## \\_quarto.yml {auto-animate=\"true\"}\n\nA YAML file with particular keys and values that Quarto recognizes. Unrecognized keys are ignored.\n\n``` {.yaml filename=\"_quarto.yml\"}\nproject:\n  type: website\n  output-dir: docs\n  resources:\n    - images/python-logo.png\n\nwebsite:\n  page-navigation: true\n  title: \"From Notebooks to Dashboards with Quarto\"\n  description: \"Small Data SF - From Notebooks to Dashboards with Quarto Workshop\"\n\n  repo-url: https://github.com/posit-dev/small-data-sf-quarto-workshop\n  repo-actions: [edit, issue]\n\n  open-graph: true\n\n  sidebar:\n    background: \"#FF6349\"\n    logo: \"images/logo.png\"\n    pinned: true\n    align: center\n    tools:\n      - icon: github\n        href: https://github.com/posit-dev/small-data-sf-quarto-workshop\n        text: \"GitHub\"\n      - icon: code-square\n        href: https://posit.cloud\n        text: \"Posit Cloud\"\n\n    style: docked\n    search: true\n    collapse-level: 2\n    contents:\n      - href: index.qmd\n        text: Home\n      - href: setup.qmd\n        text: Setup\n      - section: \"Modules\"\n        contents:\n          - href: 0-intro-to-quarto/index.qmd\n          - href: 1-hello-dashboards/index.qmd\n          - href: 2-components-theming/index.qmd\n          - href: 3-deployment/index.qmd\n\n\n  page-footer:\n    right: \"This page is built with 🩷 and [Quarto](https://quarto.org/).\"\n    left: \"&copy; Copyright 2024\"\n    background: \"#FF6A8A\"\n\nformat:\n  html:\n    theme:\n      light: [cosmo, style/light.scss]\n      dark: [cosmo, style/light.scss, style/dark.scss]\n    linkcolor: \"#FF75EF\"\n    toc: true\n    code-copy: true\n    code-overflow: wrap\n    mainfont: \"Space Grotesk\"\n  \nexecute:\n  freeze: auto\n  echo: true\n\neditor: source\n```\n\n## Quarto projects\n\n-   Quarto projects have a `_quarto.yml` file\n\n-   The `type` field in this file indicates the type of project:\n\n    -   `default`: Collection of documents\n\n    -   `website`: Websites (and blogs)\n\n    -   `book`: Books\n\n    -   `manuscript`: Manuscripts (Quarto 1.4+)\n\n    -   `dashboard`: Dashboards (Quarto 1.4+)\n\n# Wrap up\n\n## A tour of Quarto\n\n::: demo\n-   Understanding the relationship between Quarto and the Jupyter engine\n-   Using Quarto in VS Code\n-   Creating Quarto documents (metadata, markdown text, and code)\n-   Working with Quarto projects\n:::\n\n\n##  {menu=\"thank you\" background-image=\"images/thank-you.png\"}\n\n::: huge-hand\nthank you!\n:::\n\n::: large\nany questions?\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}